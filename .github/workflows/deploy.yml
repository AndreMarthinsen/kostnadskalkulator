name: Production Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: self-hosted
    #    runs-on: ubuntu-latest
    strategy:
      matrix:
        # even numbers are LTS releases
        node-version: [16.x, 18.x, 20.x]

    steps:
      # equivalent of doing git clone
      - uses: actions/checkout@v4
      # human readable name for the step
      - name: Use Node.js ${{ matrix.node-version }}
        # ensures node.js is available in $PATH
        uses: actions/setup-node@v3
        with:
          # reference different versions
          node-version: ${{ matrix.node-version }}
      # npm ci is equivalent to npm install but is specifically optimized for CI
      - run: npm ci
        working-directory: src
      - run: npm run ci
        working-directory: src
      - run: npm run build --if-present
        working-directory: src


  test:
    needs: build
    runs-on: self-hosted
    #    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
        working-directory: src
      - run: npm run ci
        working-directory: src
      - run: npm test
        working-directory: src

  deploy:
    needs: [build, test]
    runs-on: self-hosted
    #    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
      - name: Set up Google SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: 'latest'
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          # allows gcloud to read credentials
          export_default_credentials: true
      - name: Installing dependencies
        run: npm ci
        working-directory: src
      - run: npm run ci
        working-directory: src
      - name: Deploy to Google App Engine
        run: gcloud app deploy
        working-directory: src

